# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python package

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        # Explicitly define configurations to avoid tag format errors
        include:
          - python-version: "3.9"
            platform: "cpu"
            container_image: "pytorch/pytorch:2.3.0-cpu-py39"
          - python-version: "3.10"
            platform: "cpu"
            container_image: "pytorch/pytorch:2.3.0-cpu-py310"
          - python-version: "3.11"
            platform: "cpu"
            container_image: "pytorch/pytorch:2.3.0-cpu-py311"
          # - python-version: "3.11"
          #   platform: "gpu"
          #   container_image: "pytorch/pytorch:2.3.0-cuda12.1-cudnn8-devel"

    runs-on: ubuntu-latest

    # Use a container with PyTorch pre-installed
    container:
      # Use the explicitly defined container image from the matrix
      image: ${{ matrix.container_image }}
    
    steps:
    - uses: actions/checkout@v4
    
    # The 'Set up Python' step is no longer needed as the container has Python pre-installed.
    
    # The GPU setup steps below are kept in case you enable the GPU matrix.
    # The container for GPU builds ('devel' tag) includes CUDA and GCC.
    - name: Install GCC 11
      if: matrix.platform == 'gpu'
      run: |
        apt-get update && apt-get install -y gcc-11 g++-11
        update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-11 100
        update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-11 100
        gcc --version

    - name: Install dependencies
      run: |
        # PyTorch is already in the container, so we just install other dependencies.
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest pytest-cov
        # Install git so we can install from git repositories
        # Use apt-get without sudo inside the container
        apt-get update && apt-get install -y git
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        # Install the package with dev dependencies
        pip install -e ".[dev]"
    
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Test with pytest
      run: |
        python -m pytest tests/ --cov=qem --cov-report=xml -v
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./coverage.xml
        fail_ci_if_error: false
        flags: ${{ matrix.platform }}_py${{ matrix.python-version }}
        name: coverage-${{ matrix.platform }}-python${{ matrix.python-version }}-${{ github.run_id }}
        verbose: true
